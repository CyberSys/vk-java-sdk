// Autogenerated from vk-api-schema. Please don't edit it manually.
package com.vk.api.sdk.exceptions;

import com.vk.api.sdk.objects.base.Error;

public class ExceptionMapper {
    public static ApiException parseException(Error error) {
        switch(error.getErrorCode()) {
            case 1:
                return new ApiUnknownException(error);
            case 2:
                return new ApiDisabledException(error);
            case 3:
                return new ApiMethodException(error);
            case 4:
                return new ApiSignatureException(error);
            case 5:
                return new ApiAuthException(error);
            case 6:
                return new ApiTooManyException(error);
            case 7:
                return new ApiPermissionException(error);
            case 8:
                return new ApiRequestException(error);
            case 9:
                return new ApiFloodException(error);
            case 10:
                return new ApiServerException(error);
            case 11:
                return new ApiEnabledInTestException(error);
            case 12:
                return new ApiCompileException(error);
            case 13:
                return new ApiRuntimeException(error);
            case 14:
                return new ApiCaptchaException(error);
            case 15:
                return new ApiAccessException(error);
            case 16:
                return new ApiAuthHttpsException(error);
            case 17:
                return new ApiAuthValidationException(error);
            case 18:
                return new ApiUserDeletedException(error);
            case 19:
                return new ApiBlockedException(error);
            case 20:
                return new ApiMethodPermissionException(error);
            case 7701:
                return new ApiAsrAudioDurationFloodedException(error);
            case 21:
                return new ApiMethodAdsException(error);
            case 7702:
                return new ApiAsrFileIsTooBigException(error);
            case 22:
                return new ApiUploadException(error);
            case 23:
                return new ApiMethodDisabledException(error);
            case 7703:
                return new ApiAsrInvalidHashException(error);
            case 24:
                return new ApiNeedConfirmationException(error);
            case 7704:
                return new ApiAsrNotFoundException(error);
            case 3609:
                return new ApiTokenExtensionRequiredException(error);
            case 25:
                return new ApiNeedTokenConfirmationException(error);
            case 3610:
                return new ApiUserDeactivatedException(error);
            case 27:
                return new ApiGroupAuthException(error);
            case 3611:
                return new ApiUserServiceDeactivatedException(error);
            case 28:
                return new ApiAppAuthException(error);
            case 29:
                return new ApiRateLimitException(error);
            case 30:
                return new ApiPrivateProfileException(error);
            case 3102:
                return new ApiWallCheckLinkCantDetermineSourceException(error);
            case 32:
                return new ApiWaitException(error);
            case 33:
                return new ApiNotImplementedYetException(error);
            case 34:
                return new ApiClientVersionDeprecatedException(error);
            case 35:
                return new ApiClientUpdateNeededException(error);
            case 36:
                return new ApiTimeoutException(error);
            case 37:
                return new ApiUserBannedException(error);
            case 38:
                return new ApiUnknownApplicationException(error);
            case 39:
                return new ApiUnknownUserException(error);
            case 40:
                return new ApiUnknownGroupException(error);
            case 41:
                return new ApiAdditionalSignupRequiredException(error);
            case 42:
                return new ApiIpIsNotAllowedException(error);
            case 43:
                return new ApiSectionDisabledException(error);
            case 2100:
                return new ApiStickersNotPurchasedException(error);
            case 2101:
                return new ApiStickersTooManyFavoritesException(error);
            case 2102:
                return new ApiStickersNotFavoriteException(error);
            case 1600:
                return new ApiStoryExpiredException(error);
            case 1602:
                return new ApiStoryIncorrectReplyPrivacyException(error);
            case 1105:
                return new ApiAuthFloodErrorException(error);
            case 600:
                return new ApiAdsPermissionException(error);
            case 601:
                return new ApiWeightedFloodException(error);
            case 602:
                return new ApiAdsPartialSuccessException(error);
            case 1114:
                return new ApiAuthAnonymousTokenHasExpiredException(error);
            case 603:
                return new ApiAdsSpecificException(error);
            case 1116:
                return new ApiAuthAnonymousTokenIsInvalidException(error);
            case 1117:
                return new ApiAuthAccessTokenHasExpiredException(error);
            case 1118:
                return new ApiAuthAnonymousTokenIpMismatchException(error);
            case 100:
                return new ApiParamException(error);
            case 101:
                return new ApiParamApiIdException(error);
            case 103:
                return new ApiLimitsException(error);
            case 104:
                return new ApiNotFoundException(error);
            case 105:
                return new ApiSaveFileException(error);
            case 106:
                return new ApiActionFailedException(error);
            case 113:
                return new ApiParamUserIdException(error);
            case 114:
                return new ApiParamAlbumIdException(error);
            case 629:
                return new ApiAdsObjectDeletedException(error);
            case 118:
                return new ApiParamServerException(error);
            case 630:
                return new ApiAdsLookalikeRequestAlreadyInProgressException(error);
            case 119:
                return new ApiParamTitleException(error);
            case 631:
                return new ApiAdsLookalikeRequestMaxCountPerDayReachedException(error);
            case 632:
                return new ApiAdsLookalikeRequestAudienceTooSmallException(error);
            case 121:
                return new ApiParamHashException(error);
            case 633:
                return new ApiAdsLookalikeRequestAudienceTooLargeException(error);
            case 634:
                return new ApiAdsLookalikeRequestExportAlreadyInProgressException(error);
            case 122:
                return new ApiParamPhotosException(error);
            case 635:
                return new ApiAdsLookalikeRequestExportMaxCountPerDayReachedException(error);
            case 636:
                return new ApiAdsLookalikeRequestExportRetargetingGroupLimitException(error);
            case 125:
                return new ApiParamGroupIdException(error);
            case 1150:
                return new ApiParamDocIdException(error);
            case 1151:
                return new ApiParamDocDeleteAccessException(error);
            case 1152:
                return new ApiParamDocTitleException(error);
            case 1153:
                return new ApiParamDocAccessException(error);
            case 129:
                return new ApiParamPhotoException(error);
            case 1154:
                return new ApiParamDocRestoreAccessException(error);
            case 1155:
                return new ApiParamDocRestoreTimeoutException(error);
            case 1160:
                return new ApiPhotoChangedException(error);
            case 140:
                return new ApiParamPageIdException(error);
            case 141:
                return new ApiAccessPageException(error);
            case 1170:
                return new ApiTooManyListsException(error);
            case 146:
                return new ApiMobileNotActivatedException(error);
            case 147:
                return new ApiInsufficientFundsException(error);
            case 150:
                return new ApiParamTimestampException(error);
            case 171:
                return new ApiFriendsListIdException(error);
            case 173:
                return new ApiFriendsListLimitException(error);
            case 174:
                return new ApiFriendsAddYourselfException(error);
            case 175:
                return new ApiFriendsAddInEnemyException(error);
            case 176:
                return new ApiFriendsAddEnemyException(error);
            case 177:
                return new ApiFriendsAddNotFoundException(error);
            case 180:
                return new ApiParamNoteIdException(error);
            case 181:
                return new ApiAccessNoteException(error);
            case 182:
                return new ApiAccessNoteCommentException(error);
            case 183:
                return new ApiAccessCommentException(error);
            case 700:
                return new ApiGroupChangeCreatorException(error);
            case 701:
                return new ApiGroupNotInClubException(error);
            case 702:
                return new ApiGroupTooManyOfficersException(error);
            case 703:
                return new ApiGroupNeed2faException(error);
            case 704:
                return new ApiGroupHostNeed2faException(error);
            case 706:
                return new ApiGroupTooManyAddressesException(error);
            case 711:
                return new ApiGroupAppIsNotInstalledInCommunityException(error);
            case 200:
                return new ApiAccessAlbumException(error);
            case 201:
                return new ApiAccessAudioException(error);
            case 714:
                return new ApiGroupInviteLinksNotValidException(error);
            case 203:
                return new ApiAccessGroupException(error);
            case 204:
                return new ApiAccessVideoException(error);
            case 205:
                return new ApiAccessMarketException(error);
            case 210:
                return new ApiWallAccessPostException(error);
            case 211:
                return new ApiWallAccessCommentException(error);
            case 212:
                return new ApiWallAccessRepliesException(error);
            case 213:
                return new ApiWallAccessAddReplyException(error);
            case 214:
                return new ApiWallAddPostException(error);
            case 3800:
                return new ApiFaveAliexpressTagException(error);
            case 219:
                return new ApiWallAdsPublishedException(error);
            case 220:
                return new ApiWallTooManyRecipientsException(error);
            case 221:
                return new ApiStatusNoAudioException(error);
            case 222:
                return new ApiWallLinksForbiddenException(error);
            case 223:
                return new ApiWallReplyOwnerFloodException(error);
            case 224:
                return new ApiWallAdsPostLimitReachedException(error);
            case 225:
                return new ApiWallDonutException(error);
            case 1251:
                return new ApiAppsAlreadyUnlockedException(error);
            case 3300:
                return new ApiRecaptchaException(error);
            case 3301:
                return new ApiPhoneValidationNeedException(error);
            case 3302:
                return new ApiPasswordValidationNeedException(error);
            case 3303:
                return new ApiOtpValidationNeedException(error);
            case 232:
                return new ApiLikesReactionCanNotBeAppliedException(error);
            case 1256:
                return new ApiAppsSubscriptionNotFoundException(error);
            case 3304:
                return new ApiEmailConfirmationNeedException(error);
            case 3305:
                return new ApiAssertVotesException(error);
            case 1257:
                return new ApiAppsSubscriptionInvalidStatusException(error);
            case 1260:
                return new ApiInvalidAddressException(error);
            case 11500:
                return new ApiCuaConfirmationRequiredException(error);
            case 242:
                return new ApiFriendsTooManyFriendsException(error);
            case 250:
                return new ApiPollsAccessException(error);
            case 251:
                return new ApiPollsPollIdException(error);
            case 11003:
                return new ApiAppsEmptyFilterParamsException(error);
            case 11004:
                return new ApiAppsEmptySnippetDataException(error);
            case 252:
                return new ApiPollsAnswerIdException(error);
            case 11005:
                return new ApiAppsTooManySnippetsException(error);
            case 253:
                return new ApiPollsAccessWithoutVoteException(error);
            case 11006:
                return new ApiAppsNotFoundSnippetException(error);
            case 260:
                return new ApiAccessGroupsException(error);
            case 9999:
                return new ApiNotSupportedHttpMethodException(error);
            case 800:
                return new ApiVideoAlreadyAddedException(error);
            case 801:
                return new ApiVideoCommentsClosedException(error);
            case 300:
                return new ApiAlbumFullException(error);
            case 302:
                return new ApiAlbumsLimitException(error);
            case 11101:
                return new ApiTranslationsCantTranslateException(error);
            case 11102:
                return new ApiTranslationsMultipleSourceLangException(error);
            case 1900:
                return new ApiPrettyCardsCardNotFoundException(error);
            case 1901:
                return new ApiPrettyCardsTooManyCardsException(error);
            case 1902:
                return new ApiPrettyCardsCardIsConnectedToPostException(error);
            case 1400:
                return new ApiMarketRestoreTooLateException(error);
            case 1401:
                return new ApiMarketCommentsClosedException(error);
            case 1402:
                return new ApiMarketAlbumNotFoundException(error);
            case 1403:
                return new ApiMarketItemNotFoundException(error);
            case 1404:
                return new ApiMarketItemAlreadyAddedException(error);
            case 1405:
                return new ApiMarketTooManyItemsException(error);
            case 1406:
                return new ApiMarketTooManyItemsInAlbumException(error);
            case 1407:
                return new ApiMarketTooManyAlbumsException(error);
            case 1408:
                return new ApiMarketItemHasBadLinksException(error);
            case 1409:
                return new ApiMarketExtendedNotEnabledException(error);
            case 1410:
                return new ApiMarketVariantsNotEnabledException(error);
            case 1411:
                return new ApiMarketVariantsErrorException(error);
            case 1412:
                return new ApiMarketGroupingItemsWithDifferentPropertiesException(error);
            case 900:
                return new ApiMessagesUserBlockedException(error);
            case 1413:
                return new ApiMarketGroupingAlreadyHasSuchVariantException(error);
            case 901:
                return new ApiMessagesDenySendException(error);
            case 1414:
                return new ApiMarketGroupingHasOtherPropertiesException(error);
            case 902:
                return new ApiMessagesPrivacyException(error);
            case 1415:
                return new ApiMarketGroupingMustHaveVariantsException(error);
            case 1416:
                return new ApiMarketVariantNotFoundException(error);
            case 1417:
                return new ApiMarketPropertyNotFoundException(error);
            case 1418:
                return new ApiMarketMaxPropertiesLimitExceedException(error);
            case 1419:
                return new ApiMarketMaxVariantsLimitExceedException(error);
            case 907:
                return new ApiMessagesTooOldPtsException(error);
            case 908:
                return new ApiMessagesTooNewPtsException(error);
            case 909:
                return new ApiMessagesEditExpiredException(error);
            case 1421:
                return new ApiMarketNameTooLongException(error);
            case 910:
                return new ApiMessagesTooBigException(error);
            case 911:
                return new ApiMessagesKeyboardInvalidException(error);
            case 1423:
                return new ApiMarketVariantValueTooLongException(error);
            case 1424:
                return new ApiMarketUnknownPropertyTypeException(error);
            case 912:
                return new ApiMessagesChatBotFeatureException(error);
            case 1425:
                return new ApiMarketGroupingMustContainMoreThanOneItemException(error);
            case 913:
                return new ApiMessagesTooLongForwardsException(error);
            case 914:
                return new ApiMessagesTooLongMessageException(error);
            case 1426:
                return new ApiMarketGroupingItemsMustHaveDistinctPropertiesException(error);
            case 1427:
                return new ApiMarketOrdersNoCartItemsException(error);
            case 917:
                return new ApiMessagesChatUserNoAccessException(error);
            case 1429:
                return new ApiMarketInvalidDimensionsException(error);
            case 1430:
                return new ApiMarketCantChangeVkpayStatusException(error);
            case 919:
                return new ApiMessagesCantSeeInviteLinkException(error);
            case 1431:
                return new ApiMarketShopAlreadyEnabledException(error);
            case 920:
                return new ApiMessagesEditKindDisallowedException(error);
            case 1432:
                return new ApiMarketShopAlreadyDisabledException(error);
            case 921:
                return new ApiMessagesCantFwdException(error);
            case 1433:
                return new ApiMarketPhotosCropInvalidFormatException(error);
            case 922:
                return new ApiMessagesChatUserLeftException(error);
            case 1434:
                return new ApiMarketPhotosCropOverflowException(error);
            case 1435:
                return new ApiMarketPhotosCropSizeTooLowException(error);
            case 924:
                return new ApiMessagesCantDeleteForAllException(error);
            case 925:
                return new ApiMessagesChatNotAdminException(error);
            case 1438:
                return new ApiMarketNotEnabledException(error);
            case 927:
                return new ApiMessagesChatNotExistException(error);
            case 931:
                return new ApiMessagesCantChangeInviteLinkException(error);
            case 932:
                return new ApiMessagesGroupPeerAccessException(error);
            case 1446:
                return new ApiMarketAlbumMainHiddenException(error);
            case 935:
                return new ApiMessagesChatUserNotInChatException(error);
            case 936:
                return new ApiMessagesContactNotFoundException(error);
            case 939:
                return new ApiMessagesMessageRequestAlreadySentException(error);
            case 940:
                return new ApiMessagesTooManyPostsException(error);
            case 942:
                return new ApiMessagesCantPinOneTimeStoryException(error);
            case 943:
                return new ApiMessagesIntentCantUseException(error);
            case 1456:
                return new ApiMarketOrdersInvalidStatusException(error);
            case 944:
                return new ApiMessagesIntentLimitOverflowException(error);
            case 1457:
                return new ApiMarketFailedToSetAlbumAsMainException(error);
            case 945:
                return new ApiMessagesChatDisabledException(error);
            case 1458:
                return new ApiMarketFailedToUnsetAlbumAsMainException(error);
            case 946:
                return new ApiMessagesChatUnsupportedException(error);
            case 947:
                return new ApiMessagesMemberAccessToGroupDeniedException(error);
            case 949:
                return new ApiMessagesCantEditPinnedYetException(error);
            case 950:
                return new ApiMessagesPeerBlockedReasonByTimeException(error);
            case 962:
                return new ApiMessagesUserNotDonException(error);
            case 969:
                return new ApiMessagesMessageCannotBeForwardedException(error);
            case 970:
                return new ApiMessagesCantPinExpiringMessageException(error);
            case 2000:
                return new ApiCallbackApiServersLimitException(error);
            case 985:
                return new ApiMessagesGroupForNotificationsOnlyException(error);
            case 1518:
                return new ApiMarketItemIsNotDeletedException(error);
            case 1009:
                return new ApiMessagesInvalidReactionIdException(error);
            case 1010:
                return new ApiMessagesForbiddenReactionException(error);
            case 1011:
                return new ApiMessagesReactionsLimitReachedException(error);
            case 500:
                return new ApiVotesPermissionException(error);
            case 1012:
                return new ApiMessagesWritingDisabledForChatException(error);
            default:
                return new ApiException(error);
        }
    }

    public static ApiException buildExceptionByErrorCode(Integer errorCode) {
        switch(errorCode) {
            case 1:
                return new ApiUnknownException();
            case 2:
                return new ApiDisabledException();
            case 3:
                return new ApiMethodException();
            case 4:
                return new ApiSignatureException();
            case 5:
                return new ApiAuthException();
            case 6:
                return new ApiTooManyException();
            case 7:
                return new ApiPermissionException();
            case 8:
                return new ApiRequestException();
            case 9:
                return new ApiFloodException();
            case 10:
                return new ApiServerException();
            case 11:
                return new ApiEnabledInTestException();
            case 12:
                return new ApiCompileException();
            case 13:
                return new ApiRuntimeException();
            case 14:
                return new ApiCaptchaException();
            case 15:
                return new ApiAccessException();
            case 16:
                return new ApiAuthHttpsException();
            case 17:
                return new ApiAuthValidationException();
            case 18:
                return new ApiUserDeletedException();
            case 19:
                return new ApiBlockedException();
            case 20:
                return new ApiMethodPermissionException();
            case 7701:
                return new ApiAsrAudioDurationFloodedException();
            case 21:
                return new ApiMethodAdsException();
            case 7702:
                return new ApiAsrFileIsTooBigException();
            case 22:
                return new ApiUploadException();
            case 23:
                return new ApiMethodDisabledException();
            case 7703:
                return new ApiAsrInvalidHashException();
            case 24:
                return new ApiNeedConfirmationException();
            case 7704:
                return new ApiAsrNotFoundException();
            case 3609:
                return new ApiTokenExtensionRequiredException();
            case 25:
                return new ApiNeedTokenConfirmationException();
            case 3610:
                return new ApiUserDeactivatedException();
            case 27:
                return new ApiGroupAuthException();
            case 3611:
                return new ApiUserServiceDeactivatedException();
            case 28:
                return new ApiAppAuthException();
            case 29:
                return new ApiRateLimitException();
            case 30:
                return new ApiPrivateProfileException();
            case 3102:
                return new ApiWallCheckLinkCantDetermineSourceException();
            case 32:
                return new ApiWaitException();
            case 33:
                return new ApiNotImplementedYetException();
            case 34:
                return new ApiClientVersionDeprecatedException();
            case 35:
                return new ApiClientUpdateNeededException();
            case 36:
                return new ApiTimeoutException();
            case 37:
                return new ApiUserBannedException();
            case 38:
                return new ApiUnknownApplicationException();
            case 39:
                return new ApiUnknownUserException();
            case 40:
                return new ApiUnknownGroupException();
            case 41:
                return new ApiAdditionalSignupRequiredException();
            case 42:
                return new ApiIpIsNotAllowedException();
            case 43:
                return new ApiSectionDisabledException();
            case 2100:
                return new ApiStickersNotPurchasedException();
            case 2101:
                return new ApiStickersTooManyFavoritesException();
            case 2102:
                return new ApiStickersNotFavoriteException();
            case 1600:
                return new ApiStoryExpiredException();
            case 1602:
                return new ApiStoryIncorrectReplyPrivacyException();
            case 1105:
                return new ApiAuthFloodErrorException();
            case 600:
                return new ApiAdsPermissionException();
            case 601:
                return new ApiWeightedFloodException();
            case 602:
                return new ApiAdsPartialSuccessException();
            case 1114:
                return new ApiAuthAnonymousTokenHasExpiredException();
            case 603:
                return new ApiAdsSpecificException();
            case 1116:
                return new ApiAuthAnonymousTokenIsInvalidException();
            case 1117:
                return new ApiAuthAccessTokenHasExpiredException();
            case 1118:
                return new ApiAuthAnonymousTokenIpMismatchException();
            case 100:
                return new ApiParamException();
            case 101:
                return new ApiParamApiIdException();
            case 103:
                return new ApiLimitsException();
            case 104:
                return new ApiNotFoundException();
            case 105:
                return new ApiSaveFileException();
            case 106:
                return new ApiActionFailedException();
            case 113:
                return new ApiParamUserIdException();
            case 114:
                return new ApiParamAlbumIdException();
            case 629:
                return new ApiAdsObjectDeletedException();
            case 118:
                return new ApiParamServerException();
            case 630:
                return new ApiAdsLookalikeRequestAlreadyInProgressException();
            case 119:
                return new ApiParamTitleException();
            case 631:
                return new ApiAdsLookalikeRequestMaxCountPerDayReachedException();
            case 632:
                return new ApiAdsLookalikeRequestAudienceTooSmallException();
            case 121:
                return new ApiParamHashException();
            case 633:
                return new ApiAdsLookalikeRequestAudienceTooLargeException();
            case 634:
                return new ApiAdsLookalikeRequestExportAlreadyInProgressException();
            case 122:
                return new ApiParamPhotosException();
            case 635:
                return new ApiAdsLookalikeRequestExportMaxCountPerDayReachedException();
            case 636:
                return new ApiAdsLookalikeRequestExportRetargetingGroupLimitException();
            case 125:
                return new ApiParamGroupIdException();
            case 1150:
                return new ApiParamDocIdException();
            case 1151:
                return new ApiParamDocDeleteAccessException();
            case 1152:
                return new ApiParamDocTitleException();
            case 1153:
                return new ApiParamDocAccessException();
            case 129:
                return new ApiParamPhotoException();
            case 1154:
                return new ApiParamDocRestoreAccessException();
            case 1155:
                return new ApiParamDocRestoreTimeoutException();
            case 1160:
                return new ApiPhotoChangedException();
            case 140:
                return new ApiParamPageIdException();
            case 141:
                return new ApiAccessPageException();
            case 1170:
                return new ApiTooManyListsException();
            case 146:
                return new ApiMobileNotActivatedException();
            case 147:
                return new ApiInsufficientFundsException();
            case 150:
                return new ApiParamTimestampException();
            case 171:
                return new ApiFriendsListIdException();
            case 173:
                return new ApiFriendsListLimitException();
            case 174:
                return new ApiFriendsAddYourselfException();
            case 175:
                return new ApiFriendsAddInEnemyException();
            case 176:
                return new ApiFriendsAddEnemyException();
            case 177:
                return new ApiFriendsAddNotFoundException();
            case 180:
                return new ApiParamNoteIdException();
            case 181:
                return new ApiAccessNoteException();
            case 182:
                return new ApiAccessNoteCommentException();
            case 183:
                return new ApiAccessCommentException();
            case 700:
                return new ApiGroupChangeCreatorException();
            case 701:
                return new ApiGroupNotInClubException();
            case 702:
                return new ApiGroupTooManyOfficersException();
            case 703:
                return new ApiGroupNeed2faException();
            case 704:
                return new ApiGroupHostNeed2faException();
            case 706:
                return new ApiGroupTooManyAddressesException();
            case 711:
                return new ApiGroupAppIsNotInstalledInCommunityException();
            case 200:
                return new ApiAccessAlbumException();
            case 201:
                return new ApiAccessAudioException();
            case 714:
                return new ApiGroupInviteLinksNotValidException();
            case 203:
                return new ApiAccessGroupException();
            case 204:
                return new ApiAccessVideoException();
            case 205:
                return new ApiAccessMarketException();
            case 210:
                return new ApiWallAccessPostException();
            case 211:
                return new ApiWallAccessCommentException();
            case 212:
                return new ApiWallAccessRepliesException();
            case 213:
                return new ApiWallAccessAddReplyException();
            case 214:
                return new ApiWallAddPostException();
            case 3800:
                return new ApiFaveAliexpressTagException();
            case 219:
                return new ApiWallAdsPublishedException();
            case 220:
                return new ApiWallTooManyRecipientsException();
            case 221:
                return new ApiStatusNoAudioException();
            case 222:
                return new ApiWallLinksForbiddenException();
            case 223:
                return new ApiWallReplyOwnerFloodException();
            case 224:
                return new ApiWallAdsPostLimitReachedException();
            case 225:
                return new ApiWallDonutException();
            case 1251:
                return new ApiAppsAlreadyUnlockedException();
            case 3300:
                return new ApiRecaptchaException();
            case 3301:
                return new ApiPhoneValidationNeedException();
            case 3302:
                return new ApiPasswordValidationNeedException();
            case 3303:
                return new ApiOtpValidationNeedException();
            case 232:
                return new ApiLikesReactionCanNotBeAppliedException();
            case 1256:
                return new ApiAppsSubscriptionNotFoundException();
            case 3304:
                return new ApiEmailConfirmationNeedException();
            case 3305:
                return new ApiAssertVotesException();
            case 1257:
                return new ApiAppsSubscriptionInvalidStatusException();
            case 1260:
                return new ApiInvalidAddressException();
            case 11500:
                return new ApiCuaConfirmationRequiredException();
            case 242:
                return new ApiFriendsTooManyFriendsException();
            case 250:
                return new ApiPollsAccessException();
            case 251:
                return new ApiPollsPollIdException();
            case 11003:
                return new ApiAppsEmptyFilterParamsException();
            case 11004:
                return new ApiAppsEmptySnippetDataException();
            case 252:
                return new ApiPollsAnswerIdException();
            case 11005:
                return new ApiAppsTooManySnippetsException();
            case 253:
                return new ApiPollsAccessWithoutVoteException();
            case 11006:
                return new ApiAppsNotFoundSnippetException();
            case 260:
                return new ApiAccessGroupsException();
            case 9999:
                return new ApiNotSupportedHttpMethodException();
            case 800:
                return new ApiVideoAlreadyAddedException();
            case 801:
                return new ApiVideoCommentsClosedException();
            case 300:
                return new ApiAlbumFullException();
            case 302:
                return new ApiAlbumsLimitException();
            case 11101:
                return new ApiTranslationsCantTranslateException();
            case 11102:
                return new ApiTranslationsMultipleSourceLangException();
            case 1900:
                return new ApiPrettyCardsCardNotFoundException();
            case 1901:
                return new ApiPrettyCardsTooManyCardsException();
            case 1902:
                return new ApiPrettyCardsCardIsConnectedToPostException();
            case 1400:
                return new ApiMarketRestoreTooLateException();
            case 1401:
                return new ApiMarketCommentsClosedException();
            case 1402:
                return new ApiMarketAlbumNotFoundException();
            case 1403:
                return new ApiMarketItemNotFoundException();
            case 1404:
                return new ApiMarketItemAlreadyAddedException();
            case 1405:
                return new ApiMarketTooManyItemsException();
            case 1406:
                return new ApiMarketTooManyItemsInAlbumException();
            case 1407:
                return new ApiMarketTooManyAlbumsException();
            case 1408:
                return new ApiMarketItemHasBadLinksException();
            case 1409:
                return new ApiMarketExtendedNotEnabledException();
            case 1410:
                return new ApiMarketVariantsNotEnabledException();
            case 1411:
                return new ApiMarketVariantsErrorException();
            case 1412:
                return new ApiMarketGroupingItemsWithDifferentPropertiesException();
            case 900:
                return new ApiMessagesUserBlockedException();
            case 1413:
                return new ApiMarketGroupingAlreadyHasSuchVariantException();
            case 901:
                return new ApiMessagesDenySendException();
            case 1414:
                return new ApiMarketGroupingHasOtherPropertiesException();
            case 902:
                return new ApiMessagesPrivacyException();
            case 1415:
                return new ApiMarketGroupingMustHaveVariantsException();
            case 1416:
                return new ApiMarketVariantNotFoundException();
            case 1417:
                return new ApiMarketPropertyNotFoundException();
            case 1418:
                return new ApiMarketMaxPropertiesLimitExceedException();
            case 1419:
                return new ApiMarketMaxVariantsLimitExceedException();
            case 907:
                return new ApiMessagesTooOldPtsException();
            case 908:
                return new ApiMessagesTooNewPtsException();
            case 909:
                return new ApiMessagesEditExpiredException();
            case 1421:
                return new ApiMarketNameTooLongException();
            case 910:
                return new ApiMessagesTooBigException();
            case 911:
                return new ApiMessagesKeyboardInvalidException();
            case 1423:
                return new ApiMarketVariantValueTooLongException();
            case 1424:
                return new ApiMarketUnknownPropertyTypeException();
            case 912:
                return new ApiMessagesChatBotFeatureException();
            case 1425:
                return new ApiMarketGroupingMustContainMoreThanOneItemException();
            case 913:
                return new ApiMessagesTooLongForwardsException();
            case 914:
                return new ApiMessagesTooLongMessageException();
            case 1426:
                return new ApiMarketGroupingItemsMustHaveDistinctPropertiesException();
            case 1427:
                return new ApiMarketOrdersNoCartItemsException();
            case 917:
                return new ApiMessagesChatUserNoAccessException();
            case 1429:
                return new ApiMarketInvalidDimensionsException();
            case 1430:
                return new ApiMarketCantChangeVkpayStatusException();
            case 919:
                return new ApiMessagesCantSeeInviteLinkException();
            case 1431:
                return new ApiMarketShopAlreadyEnabledException();
            case 920:
                return new ApiMessagesEditKindDisallowedException();
            case 1432:
                return new ApiMarketShopAlreadyDisabledException();
            case 921:
                return new ApiMessagesCantFwdException();
            case 1433:
                return new ApiMarketPhotosCropInvalidFormatException();
            case 922:
                return new ApiMessagesChatUserLeftException();
            case 1434:
                return new ApiMarketPhotosCropOverflowException();
            case 1435:
                return new ApiMarketPhotosCropSizeTooLowException();
            case 924:
                return new ApiMessagesCantDeleteForAllException();
            case 925:
                return new ApiMessagesChatNotAdminException();
            case 1438:
                return new ApiMarketNotEnabledException();
            case 927:
                return new ApiMessagesChatNotExistException();
            case 931:
                return new ApiMessagesCantChangeInviteLinkException();
            case 932:
                return new ApiMessagesGroupPeerAccessException();
            case 1446:
                return new ApiMarketAlbumMainHiddenException();
            case 935:
                return new ApiMessagesChatUserNotInChatException();
            case 936:
                return new ApiMessagesContactNotFoundException();
            case 939:
                return new ApiMessagesMessageRequestAlreadySentException();
            case 940:
                return new ApiMessagesTooManyPostsException();
            case 942:
                return new ApiMessagesCantPinOneTimeStoryException();
            case 943:
                return new ApiMessagesIntentCantUseException();
            case 1456:
                return new ApiMarketOrdersInvalidStatusException();
            case 944:
                return new ApiMessagesIntentLimitOverflowException();
            case 1457:
                return new ApiMarketFailedToSetAlbumAsMainException();
            case 945:
                return new ApiMessagesChatDisabledException();
            case 1458:
                return new ApiMarketFailedToUnsetAlbumAsMainException();
            case 946:
                return new ApiMessagesChatUnsupportedException();
            case 947:
                return new ApiMessagesMemberAccessToGroupDeniedException();
            case 949:
                return new ApiMessagesCantEditPinnedYetException();
            case 950:
                return new ApiMessagesPeerBlockedReasonByTimeException();
            case 962:
                return new ApiMessagesUserNotDonException();
            case 969:
                return new ApiMessagesMessageCannotBeForwardedException();
            case 970:
                return new ApiMessagesCantPinExpiringMessageException();
            case 2000:
                return new ApiCallbackApiServersLimitException();
            case 985:
                return new ApiMessagesGroupForNotificationsOnlyException();
            case 1518:
                return new ApiMarketItemIsNotDeletedException();
            case 1009:
                return new ApiMessagesInvalidReactionIdException();
            case 1010:
                return new ApiMessagesForbiddenReactionException();
            case 1011:
                return new ApiMessagesReactionsLimitReachedException();
            case 500:
                return new ApiVotesPermissionException();
            case 1012:
                return new ApiMessagesWritingDisabledForChatException();
            default:
                return new ApiException(new Error().setErrorCode(errorCode));
        }
    }
}
