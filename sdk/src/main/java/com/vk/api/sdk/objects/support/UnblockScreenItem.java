// Autogenerated from vk-api-schema. Please don't edit it manually.
package com.vk.api.sdk.objects.support;

import com.google.gson.*;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.Map;

public interface UnblockScreenItem {
    default UnblockScreenTextBorderedFields getSupportUnblockScreenItemAsUnblockScreenTextBorderedFields(
            ) {
        return (UnblockScreenTextBorderedFields) this;
    }

    default UnblockScreenTextBackgroundFields getSupportUnblockScreenItemAsUnblockScreenTextBackgroundFields(
            ) {
        return (UnblockScreenTextBackgroundFields) this;
    }

    default UnblockScreenButtonUnblockFields getSupportUnblockScreenItemAsUnblockScreenButtonUnblockFields(
            ) {
        return (UnblockScreenButtonUnblockFields) this;
    }

    default UnblockScreenButtonSubmitFields getSupportUnblockScreenItemAsUnblockScreenButtonSubmitFields(
            ) {
        return (UnblockScreenButtonSubmitFields) this;
    }

    default UnblockScreenHeaderFields getSupportUnblockScreenItemAsUnblockScreenHeaderFields() {
        return (UnblockScreenHeaderFields) this;
    }

    default UnblockScreenModalButtonFields getSupportUnblockScreenItemAsUnblockScreenModalButtonFields(
            ) {
        return (UnblockScreenModalButtonFields) this;
    }

    default UnblockScreenTutorialFields getSupportUnblockScreenItemAsUnblockScreenTutorialFields() {
        return (UnblockScreenTutorialFields) this;
    }

    default UnblockScreenStepperFields getSupportUnblockScreenItemAsUnblockScreenStepperFields() {
        return (UnblockScreenStepperFields) this;
    }

    default UnblockScreenButtonFields getSupportUnblockScreenItemAsUnblockScreenButtonFields() {
        return (UnblockScreenButtonFields) this;
    }

    default UnblockScreenContentBlockFields getSupportUnblockScreenItemAsUnblockScreenContentBlockFields(
            ) {
        return (UnblockScreenContentBlockFields) this;
    }

    default UnblockScreenSlidersFields getSupportUnblockScreenItemAsUnblockScreenSlidersFields() {
        return (UnblockScreenSlidersFields) this;
    }

    default UnblockScreenEventsListFields getSupportUnblockScreenItemAsUnblockScreenEventsListFields(
            ) {
        return (UnblockScreenEventsListFields) this;
    }

    default UnblockScreenButtonSupportFields getSupportUnblockScreenItemAsUnblockScreenButtonSupportFields(
            ) {
        return (UnblockScreenButtonSupportFields) this;
    }

    class Deserializer implements JsonDeserializer<UnblockScreenItem> {
        private static final String discriminatorField = "type";

        private static final Map<String, Class<? extends UnblockScreenItem>> subtypes = new HashMap<String, Class<? extends UnblockScreenItem>>() {{
        put("text_bordered", UnblockScreenTextBorderedFields.class);
        put("text_background", UnblockScreenTextBackgroundFields.class);
        put("stepper", UnblockScreenStepperFields.class);
        put("support_button", UnblockScreenButtonSupportFields.class);
        put("events_list", UnblockScreenEventsListFields.class);
        put("unblock_button", UnblockScreenButtonUnblockFields.class);
        put("modal_button", UnblockScreenModalButtonFields.class);
        put("header", UnblockScreenHeaderFields.class);
        put("final_button", UnblockScreenButtonFields.class);
        put("ban_reason_content", UnblockScreenContentBlockFields.class);
        put("tutorial", UnblockScreenTutorialFields.class);
        put("sliders", UnblockScreenSlidersFields.class);
        put("button_submit", UnblockScreenButtonSubmitFields.class);
        }};

        @Override
        public UnblockScreenItem deserialize(JsonElement json, Type typeOfT,
                JsonDeserializationContext context) throws JsonParseException {
            String errorTrace = "";
            try {
                JsonObject data = json.getAsJsonObject();
                String resultSubtypeValue = data.get(discriminatorField).getAsString();
                if (subtypes.containsKey(resultSubtypeValue)) {
                    return context.deserialize(data, subtypes.get(resultSubtypeValue));
                } else {
                    throw new JsonParseException("There is no discriminator field in JSON-object", new com.vk.api.sdk.exceptions.UnexpectedOneOfSubtypeException(resultSubtypeValue, Deserializer.class, subtypes.keySet()));
                }
            } catch (Exception e) {
                // Failed to deserialize UnblockScreenItem object from JSON
                errorTrace = e.getLocalizedMessage();
            }
            throw new JsonParseException("Failed to deserialize UnblockScreenItem object from JSON" + errorTrace);
        }
    }
}
