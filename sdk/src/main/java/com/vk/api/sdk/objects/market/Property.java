// Autogenerated from vk-api-schema. Please don't edit it manually.
package com.vk.api.sdk.objects.market;

import com.google.gson.Gson;
import com.google.gson.annotations.SerializedName;
import com.vk.api.sdk.objects.Validable;
import com.vk.api.sdk.objects.annotations.Required;

import java.util.List;
import java.util.Objects;

/**
 * Property object
 */
public class Property implements Validable {
    @SerializedName("id")
    @Required
    private Integer id;

    /**
     * Property name
     */
    @SerializedName("title")
    @Required
    private String title;

    /**
     * Property type
     */
    @SerializedName("type")
    private PropertyType type;

    @SerializedName("variants")
    @Required
    private List<PropertyVariant> variants;

    public Integer getId() {
        return id;
    }

    public Property setId(Integer id) {
        this.id = id;
        return this;
    }

    public String getTitle() {
        return title;
    }

    public Property setTitle(String title) {
        this.title = title;
        return this;
    }

    public PropertyType getType() {
        return type;
    }

    public Property setType(PropertyType type) {
        this.type = type;
        return this;
    }

    public List<PropertyVariant> getVariants() {
        return variants;
    }

    public Property setVariants(List<PropertyVariant> variants) {
        this.variants = variants;
        return this;
    }

    @Override
    public int hashCode() {
        return Objects.hash(id, variants, title, type);
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;
        Property property = (Property) o;
        return Objects.equals(id, property.id) &&
                Objects.equals(variants, property.variants) &&
                Objects.equals(title, property.title) &&
                Objects.equals(type, property.type);
    }

    @Override
    public String toString() {
        final Gson gson = new Gson();
        return gson.toJson(this);
    }

    public String toPrettyString() {
        final StringBuilder sb = new StringBuilder("Property{");
        sb.append("id=").append(id);
        sb.append(", variants=").append(variants);
        sb.append(", title='").append(title).append("'");
        sb.append(", type='").append(type).append("'");
        sb.append('}');
        return sb.toString();
    }
}
