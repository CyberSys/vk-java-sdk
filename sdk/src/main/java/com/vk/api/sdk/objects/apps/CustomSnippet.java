// Autogenerated from vk-api-schema. Please don't edit it manually.
package com.vk.api.sdk.objects.apps;

import com.google.gson.Gson;
import com.google.gson.annotations.SerializedName;
import com.vk.api.sdk.objects.Validable;

import java.util.List;
import java.util.Objects;

/**
 * CustomSnippet object
 */
public class CustomSnippet implements Validable {
    @SerializedName("button")
    private CustomSnippetButton button;

    @SerializedName("description")
    private String description;

    @SerializedName("expired_at")
    private Integer expiredAt;

    @SerializedName("group_id")
    private List<Long> groupId;

    @SerializedName("hash")
    private List<String> hash;

    @SerializedName("image_url")
    private String imageUrl;

    @SerializedName("small_image_url")
    private String smallImageUrl;

    @SerializedName("snippet_id")
    private Integer snippetId;

    @SerializedName("title")
    private String title;

    @SerializedName("vk_ref")
    private List<String> vkRef;

    public CustomSnippetButton getButton() {
        return button;
    }

    public CustomSnippet setButton(CustomSnippetButton button) {
        this.button = button;
        return this;
    }

    public String getDescription() {
        return description;
    }

    public CustomSnippet setDescription(String description) {
        this.description = description;
        return this;
    }

    public Integer getExpiredAt() {
        return expiredAt;
    }

    public CustomSnippet setExpiredAt(Integer expiredAt) {
        this.expiredAt = expiredAt;
        return this;
    }

    public List<Long> getGroupId() {
        return groupId;
    }

    public CustomSnippet setGroupId(List<Long> groupId) {
        this.groupId = groupId;
        return this;
    }

    public List<String> getHash() {
        return hash;
    }

    public CustomSnippet setHash(List<String> hash) {
        this.hash = hash;
        return this;
    }

    public String getImageUrl() {
        return imageUrl;
    }

    public CustomSnippet setImageUrl(String imageUrl) {
        this.imageUrl = imageUrl;
        return this;
    }

    public String getSmallImageUrl() {
        return smallImageUrl;
    }

    public CustomSnippet setSmallImageUrl(String smallImageUrl) {
        this.smallImageUrl = smallImageUrl;
        return this;
    }

    public Integer getSnippetId() {
        return snippetId;
    }

    public CustomSnippet setSnippetId(Integer snippetId) {
        this.snippetId = snippetId;
        return this;
    }

    public String getTitle() {
        return title;
    }

    public CustomSnippet setTitle(String title) {
        this.title = title;
        return this;
    }

    public List<String> getVkRef() {
        return vkRef;
    }

    public CustomSnippet setVkRef(List<String> vkRef) {
        this.vkRef = vkRef;
        return this;
    }

    @Override
    public int hashCode() {
        return Objects.hash(button, expiredAt, smallImageUrl, groupId, imageUrl, description, title, snippetId, vkRef, hash);
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;
        CustomSnippet customSnippet = (CustomSnippet) o;
        return Objects.equals(button, customSnippet.button) &&
                Objects.equals(snippetId, customSnippet.snippetId) &&
                Objects.equals(smallImageUrl, customSnippet.smallImageUrl) &&
                Objects.equals(groupId, customSnippet.groupId) &&
                Objects.equals(vkRef, customSnippet.vkRef) &&
                Objects.equals(imageUrl, customSnippet.imageUrl) &&
                Objects.equals(description, customSnippet.description) &&
                Objects.equals(expiredAt, customSnippet.expiredAt) &&
                Objects.equals(title, customSnippet.title) &&
                Objects.equals(hash, customSnippet.hash);
    }

    @Override
    public String toString() {
        final Gson gson = new Gson();
        return gson.toJson(this);
    }

    public String toPrettyString() {
        final StringBuilder sb = new StringBuilder("CustomSnippet{");
        sb.append("button='").append(button).append("'");
        sb.append(", snippetId=").append(snippetId);
        sb.append(", smallImageUrl='").append(smallImageUrl).append("'");
        sb.append(", groupId=").append(groupId);
        sb.append(", vkRef='").append(vkRef).append("'");
        sb.append(", imageUrl='").append(imageUrl).append("'");
        sb.append(", description='").append(description).append("'");
        sb.append(", expiredAt=").append(expiredAt);
        sb.append(", title='").append(title).append("'");
        sb.append(", hash='").append(hash).append("'");
        sb.append('}');
        return sb.toString();
    }
}
