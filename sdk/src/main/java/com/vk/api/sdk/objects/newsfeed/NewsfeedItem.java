// Autogenerated from vk-api-schema. Please don't edit it manually.
package com.vk.api.sdk.objects.newsfeed;

import com.google.gson.*;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.Map;

public interface NewsfeedItem {
    default ItemWallpost getNewsfeedNewsfeedItemAsItemWallpost() {
        return (ItemWallpost) this;
    }

    default ItemPhoto getNewsfeedNewsfeedItemAsItemPhoto() {
        return (ItemPhoto) this;
    }

    default ItemPhotoTag getNewsfeedNewsfeedItemAsItemPhotoTag() {
        return (ItemPhotoTag) this;
    }

    default ItemFriend getNewsfeedNewsfeedItemAsItemFriend() {
        return (ItemFriend) this;
    }

    default ItemAudio getNewsfeedNewsfeedItemAsItemAudio() {
        return (ItemAudio) this;
    }

    default ItemVideo getNewsfeedNewsfeedItemAsItemVideo() {
        return (ItemVideo) this;
    }

    default ItemTopic getNewsfeedNewsfeedItemAsItemTopic() {
        return (ItemTopic) this;
    }

    default ItemDigest getNewsfeedNewsfeedItemAsItemDigest() {
        return (ItemDigest) this;
    }

    default ItemPromoButton getNewsfeedNewsfeedItemAsItemPromoButton() {
        return (ItemPromoButton) this;
    }

    class Deserializer implements JsonDeserializer<NewsfeedItem> {
        private static final String discriminatorField = "type";

        private static final Map<String, Class<? extends NewsfeedItem>> subtypes = new HashMap<String, Class<? extends NewsfeedItem>>() {{
        put("post", ItemWallpost.class);
        put("wall_photo", ItemPhoto.class);
        put("photo_tag", ItemPhotoTag.class);
        put("friend", ItemFriend.class);
        put("digest", ItemDigest.class);
        put("photo", ItemPhoto.class);
        put("topic", ItemTopic.class);
        put("audio", ItemAudio.class);
        put("video", ItemVideo.class);
        put("promo_button", ItemPromoButton.class);
        }};

        @Override
        public NewsfeedItem deserialize(JsonElement json, Type typeOfT,
                JsonDeserializationContext context) throws JsonParseException {
            String errorTrace = "";
            try {
                JsonObject data = json.getAsJsonObject();
                String resultSubtypeValue = data.get(discriminatorField).getAsString();
                if (subtypes.containsKey(resultSubtypeValue)) {
                    return context.deserialize(data, subtypes.get(resultSubtypeValue));
                } else {
                    throw new JsonParseException("There is no discriminator field in JSON-object", new com.vk.api.sdk.exceptions.UnexpectedOneOfSubtypeException(resultSubtypeValue, Deserializer.class, subtypes.keySet()));
                }
            } catch (Exception e) {
                // Failed to deserialize NewsfeedItem object from JSON
                errorTrace = e.getLocalizedMessage();
            }
            throw new JsonParseException("Failed to deserialize NewsfeedItem object from JSON" + errorTrace);
        }
    }
}
