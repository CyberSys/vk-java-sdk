// Autogenerated from vk-api-schema. Please don't edit it manually.
package com.vk.api.sdk.objects.messages;

import com.google.gson.*;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.Map;

public interface KeyboardButtonPropertyAction {
    default KeyboardButtonActionLocation getMessagesKeyboardButtonPropertyActionAsKeyboardButtonActionLocation(
            ) {
        return (KeyboardButtonActionLocation) this;
    }

    default KeyboardButtonActionOpenApp getMessagesKeyboardButtonPropertyActionAsKeyboardButtonActionOpenApp(
            ) {
        return (KeyboardButtonActionOpenApp) this;
    }

    default KeyboardButtonActionOpenLink getMessagesKeyboardButtonPropertyActionAsKeyboardButtonActionOpenLink(
            ) {
        return (KeyboardButtonActionOpenLink) this;
    }

    default KeyboardButtonActionOpenPhoto getMessagesKeyboardButtonPropertyActionAsKeyboardButtonActionOpenPhoto(
            ) {
        return (KeyboardButtonActionOpenPhoto) this;
    }

    default KeyboardButtonActionText getMessagesKeyboardButtonPropertyActionAsKeyboardButtonActionText(
            ) {
        return (KeyboardButtonActionText) this;
    }

    default KeyboardButtonActionCallback getMessagesKeyboardButtonPropertyActionAsKeyboardButtonActionCallback(
            ) {
        return (KeyboardButtonActionCallback) this;
    }

    default KeyboardButtonActionVkpay getMessagesKeyboardButtonPropertyActionAsKeyboardButtonActionVkpay(
            ) {
        return (KeyboardButtonActionVkpay) this;
    }

    class Deserializer implements JsonDeserializer<KeyboardButtonPropertyAction> {
        private static final String discriminatorField = "type";

        private static final Map<String, Class<? extends KeyboardButtonPropertyAction>> subtypes = new HashMap<String, Class<? extends KeyboardButtonPropertyAction>>() {{
        put("vkpay", KeyboardButtonActionVkpay.class);
        put("open_link", KeyboardButtonActionOpenLink.class);
        put("open_photo", KeyboardButtonActionOpenPhoto.class);
        put("callback", KeyboardButtonActionCallback.class);
        put("location", KeyboardButtonActionLocation.class);
        put("text", KeyboardButtonActionText.class);
        put("open_app", KeyboardButtonActionOpenApp.class);
        }};

        @Override
        public KeyboardButtonPropertyAction deserialize(JsonElement json, Type typeOfT,
                JsonDeserializationContext context) throws JsonParseException {
            String errorTrace = "";
            try {
                JsonObject data = json.getAsJsonObject();
                String resultSubtypeValue = data.get(discriminatorField).getAsString();
                if (subtypes.containsKey(resultSubtypeValue)) {
                    return context.deserialize(data, subtypes.get(resultSubtypeValue));
                } else {
                    throw new JsonParseException("There is no discriminator field in JSON-object", new com.vk.api.sdk.exceptions.UnexpectedOneOfSubtypeException(resultSubtypeValue, Deserializer.class, subtypes.keySet()));
                }
            } catch (Exception e) {
                // Failed to deserialize KeyboardButtonPropertyAction object from JSON
                errorTrace = e.getLocalizedMessage();
            }
            throw new JsonParseException("Failed to deserialize KeyboardButtonPropertyAction object from JSON" + errorTrace);
        }
    }
}
