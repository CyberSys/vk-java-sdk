// Autogenerated from vk-api-schema. Please don't edit it manually.
package com.vk.api.sdk.queries.market;

import com.vk.api.sdk.client.AbstractQueryBuilder;
import com.vk.api.sdk.client.VkApiClient;
import com.vk.api.sdk.client.actors.UserActor;
import com.vk.api.sdk.objects.annotations.ApiParam;
import com.vk.api.sdk.objects.market.responses.PhotoIdResponse;

import java.util.Arrays;
import java.util.List;

/**
 * Query for Market.saveProductPhoto method
 */
public class MarketSaveProductPhotoQueryWithId extends AbstractQueryBuilder<MarketSaveProductPhotoQueryWithId, PhotoIdResponse> {
    /**
     * Creates a AbstractQueryBuilder instance that can be used to build user api request with various parameters
     *
     * @param client VK API client
     * @param actor actor with access token
     * @param uploadResponse value of "upload response" parameter.
     */
    public MarketSaveProductPhotoQueryWithId(VkApiClient client, UserActor actor,
            String uploadResponse) {
        super(client, "market.saveProductPhoto", PhotoIdResponse.class);
        accessToken(actor.getAccessToken());
        uploadResponse(uploadResponse);
    }

    /**
     * Upload response
     *
     * @param value value of "upload response" parameter.
     * @return a reference to this {@code AbstractQueryBuilder} object to fulfill the "Builder" pattern.
     */
    @ApiParam("upload_response")
    public MarketSaveProductPhotoQueryWithId uploadResponse(String value) {
        return unsafeParam("upload_response", value);
    }

    @Override
    protected MarketSaveProductPhotoQueryWithId getThis() {
        return this;
    }

    @Override
    protected List<String> essentialKeys() {
        return Arrays.asList("upload_response", "access_token");
    }
}
